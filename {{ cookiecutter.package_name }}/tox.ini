[tox]
min_version = 4.0
requires =
    tox-pypi-filter>=0.14
envlist =
    py{310,311,312,313,314}
    py312-devdeps
    py310-oldestdeps
    codestyle
    build_docs

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
change_dir = .tmp/{envname}
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    devdeps: with the latest developer version of key dependencies
pass_env =
    # A variable to tell tests we are on a CI system
    CI
    # Custom compiler locations (such as ccache)
    CC
    # Location of locales (needed by sphinx on some systems)
    LOCALE_ARCHIVE
    # If the user has set a LC override we should follow it
    LC_ALL
set_env =
    MPLBACKEND = agg
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
deps =
    # For packages which publish nightly wheels this will pull the latest nightly
    devdeps: numpy>=0.0.dev0
    # Packages without nightly wheels will be built from source like this
    # devdeps: git+https://github.com/ndcube/ndcube
    oldestdeps: minimum_dependencies
# The following indicates which extras_require will be installed
extras =
    tests
commands_pre =
    oldestdeps: minimum_dependencies {{ cookiecutter.module_name }} --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    pip freeze --all --no-input
commands =
    # To amend the pytest command for different factors you can add a line
    # which starts with a factor like `online: --remote-data=any \`
    # If you have no factors which require different commands this is all you need:
    pytest \
    -vvv \
    -r fEs \
    --pyargs {{ cookiecutter.module_name }} \
    --cov-report=xml \
    --cov={{ cookiecutter.module_name }} \
    --cov-config={toxinidir}/.coveragerc \
    {toxinidir}/docs \
    {posargs}

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure

[testenv:build_docs]
description = invoke sphinx-build to build the HTML docs
change_dir =
    docs
extras =
    docs
commands =
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
